name: spring-cloud-companies
services:
    postgres-db:
      image: postgres:17.4
      container_name: db-companies
      volumes:
        - ./sql/create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql
        - ./sql/data.sql:/docker-entrypoint-initdb.d/data.sql
      environment:
        POSTGRES_DB: 'companies'
        POSTGRES_USER: 'debuggeandoideas'
        POSTGRES_PASSWORD: 'udemy'
      ports:
        - '5432:5432'
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U debuggeandoideas -d companies"]
        interval: 10s
        timeout: 5s
        retries: 10

    mongo-db:
      image: mongo:7.0.5-rc0
      container_name: mongo-db
      hostname: mongodb
      environment:
        MONGO_INITDB_ROOT_USERNAME: sa
        MONGO_INITDB_ROOT_PASSWORD: sa
        MONGO_INITDB_DATABASE: reports
      ports:
        - "28017:27017"
      healthcheck:
        test: echo 'db.runCommand("ping").ok' | mongosh mongo-db:27017/test --quiet
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 40s

    zookeeper:
      image: confluentinc/cp-zookeeper:7.4.3
      container_name: load-balancer
      environment:
        ZOOKEEPER_CLIENT_PORT: 2181
        ZOOKEEPER_TICK_TIME: 2000
      ports:
        - "2181:2181"

    kafka:
      image: confluentinc/cp-kafka:7.4.3
      container_name: msg-broker
      depends_on:
        - zookeeper
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://msg-broker:9092,PLAINTEXT_INTERNAL://msg-broker:29092
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      ports:
        - "9092:9092"
      healthcheck:
        test: ["CMD", "nc", "-z", "localhost", "9092"]
        interval: 10s
        timeout: 10s
        retries: 10
        start_period: 20s

    otel-collector:
      build:
        context: .
        dockerfile: Dockerfile.otel
      container_name: otel-collector
      ports:
        - "13133:13133"
        - "4317:4317"
        - "4318:4318"
        - "8888:8888"
        - "8889:8889"
        - "1888:1888"
        - "55679:55679"
      healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:13133/health"]
        interval: 10s
        timeout: 5s
        retries: 5
        start_period: 20s

    prometheus:
      container_name: prometheus
      image: prom/prometheus
      command:
        - --config.file=/etc/prometheus/prometheus.yml
      volumes:
        - ./metric_files/prometheus.yml:/etc/prometheus/prometheus.yml
      ports:
        - "9090:9090"

    loki:
      image: grafana/loki:latest
      command: -config.file=/etc/loki/local-config.yaml
      ports:
        - "3100:3100"

    tempo:
      image: grafana/tempo:latest
      command: [ "-config.file=/etc/tempo.yml" ]
      volumes:
        - ./metric_files/tempo.yml:/etc/tempo.yml
      ports:
        - "3200:3200"
        - "4317"

    grafana:
      container_name: grafana
      image: grafana/grafana
      volumes:
      - ./metric_files/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      ports:
        - "3000:3000"

    jaeger-all-in-one:
      image: jaegertracing/all-in-one:latest
      ports:
        - "16686:16686"
        - "14268"
        - "14250"

    zipkin-all-in-one:
      image: openzipkin/zipkin:latest
      ports:
        - "9411:9411"

    ms-registry-server:
      image: ms-registry-server:latest
      container_name: ms-registry-server
      ports:
        - "8761:8761"
      healthcheck:
        test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:8761/actuator/health"]
        interval: 10s
        timeout: 5s
        retries: 10
        start_period: 30s

    ms-config-server:
      image: ms-config-server:latest
      container_name: ms-config-server
      ports:
        -  "7777:7777"
      depends_on:
        ms-registry-server:
          condition: service_healthy
      environment:
        SPRING_PROFILES_ACTIVE: default
        EUREKA_URL: http://ms-registry-server:8761/eureka/
        GIT_REPO_URI: https://github.com/MariaVasquez/microservice-config.git
        GIT_USERNAME: 
        GIT_PASSWORD: 
        GIT_DEFAULT_LABEL: main
      healthcheck:
        test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:7777/actuator/health"]
        interval: 10s
        timeout: 5s
        retries: 10
        start_period: 40s

    ms-companies-fallback:
        image: ms-companies-fallback:latest
        container_name: ms-companies-fallback
        ports:
          -  "8787:8787"
        depends_on:
          ms-config-server:
            condition: service_healthy
        environment:
          EUREKA_URL: http://ms-registry-server:8761/eureka
          CONFIG_SERVER_HOST: http://ms-config-server:7777

    ms-auth:
      image: ms-auth:latest
      container_name: ms-auth
      ports:
        -  "3030:3030"
      depends_on:
        ms-config-server:
          condition: service_healthy
      environment:
        EUREKA_URL: http://ms-registry-server:8761/eureka
        CONFIG_SERVER_HOST: http://ms-config-server:7777

    ms-gateway:
      image: ms-gateway:latest
      container_name: ms-gateway
      ports:
        -  "4040:4040"
      depends_on:
        ms-registry-server:
          condition: service_healthy
      environment:
        EUREKA_URL: http://ms-registry-server:8761/eureka

    ms-co-company:
        image: ms-co-company:latest
        container_name: ms-co-company
        ports:
          -  "8081:8081"
        depends_on:
          ms-config-server:
            condition: service_healthy
          postgres-db:
            condition: service_healthy
          otel-collector:
            condition: service_healthy
        environment:
          CONFIG_SERVER_HOST: http://ms-config-server:7777
          EUREKA_URL: http://ms-registry-server:8761/eureka
          OTLP_METRICS_URL: http://otel-collector:4318/v1/metrics
          OTLP_TRACING_URL: http://otel-collector:4318/v1/traces
        healthcheck:
          test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:8081/actuator/health"]
          interval: 10s
          timeout: 5s
          retries: 10
          start_period: 40s

    ms-report:
          image: ms-report-ms:latest
          container_name: ms-report-ms
          ports:
            -  "7070:7070"
          depends_on:
            ms-config-server:
              condition: service_healthy
            kafka:
              condition: service_healthy
          environment:
            EUREKA_URL: http://ms-registry-server:8761/eureka
            CONFIG_SERVER_HOST: http://ms-config-server:7777
            BROKER_URL: msg-broker:9092
          healthcheck:
              test: ["CMD", "wget", "--spider", "--quiet", "http://localhost:7070/actuator/health"]
              interval: 10s
              timeout: 5s
              retries: 10
              start_period: 40s

    ms-report-listener:
        image: ms-report-listener:latest
        container_name: ms-report-listener
        ports:
          -  "1010:1010"
        depends_on:
          ms-co-company:
            condition: service_healthy
          ms-report:
            condition: service_healthy
          kafka:
            condition: service_healthy
          mongo-db:
            condition: service_healthy
        environment:
          MONGO_URI: mongodb://sa:sa@mongo-db:27017/reports?authSource=admin
          BROKER_URL: msg-broker:9092
          EUREKA_URL: http://ms-registry-server:8761/eureka

